<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.6">
  <POU Name="MAIN" Id="{1e704377-3948-4a60-acf5-cdd6dbd4512e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//******************************************
//cyclic call of all needed FB
//******************************************

fbAct1();	//Act1 corresponds to charging
fbAct2();	//Act2 corresponds to engraving
fbAct3();	//Act3 corresponds to tightening
fbMMA();

//copy physical Inputs in fbBtn
fbBtn.xAru:=stio.stIn.IxAruIO;
fbBtn.xReset:=stio.stIn.xResetIO;
fbBtn.xStart:=stio.stIn.xStartIO;
fbBtn.xStop:=stio.stIn.xStopIO;
fbBtn.xAirPressureOk:=stio.stIn.xAirPressureOk;
fbBtn.xManualAct1GoIn:=stio.stIn.xManualAct1GoIn;
fbBtn.xManualAct1GoOut:=stio.stIn.xManualAct1GoOut;
fbBtn.xManualAct2GoIn:=stio.stIn.xManualAct2GoIn;
fbBtn.xManualAct2GoOut:=stio.stIn.xManualAct2GoOut;
fbBtn.xManualAct3GoIn:=stio.stIn.xManualAct3GoIn;
fbBtn.xManualAct3GoOut:=stio.stIn.xManualAct3GoOut;
fbBtn.xManualCNCMotorTurnOn:=stio.stIn.xManualCNCMotorTurnOn;
fbBtn.xManualCNCMotorTurnOff:=stio.stIn.xManualCNCMotorTurnOff;
fbBtn.xEmulateTCPConnection:=stio.stIn.xEmulateTCPConnection;
//and now call it
fbBtn();

//stParam
//check for active errors
IF (fbAct1.stError.xState) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbAct1.stError.iId;
ELSIF (fbAct2.stError.xState) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbAct2.stError.iId;
ELSIF (fbAct3.stError.xState) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbAct3.stError.iId;
ELSIF (fbCycleAuto.xError) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbCycleAuto.iId;
ELSIF (fbMotor.xError) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbMotor.iErrorID;
ELSIF (fbTCP.OutputGlobal.xError) THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=fbTCP.OutPutGlobal.nErrID;
ELSIF NOT fbBtn.xAirPressureOk THEN
	stParam.stStatus.xErreur:=TRUE;
	stParam.stStatus.iId:=1;
ELSE
	//clear the error State. Do not clear the last error Message to have some kind of error history
	stParam.stStatus.xErreur:=FALSE;
END_IF

//call auto mode and give over the needed parameters
fbCycleAuto.xStart:=fbMMA.iEtape=350;
fbCycleAuto.xStop:= fbMMA.iEtape=390;
fbCycleAuto.xReset:= fbMMA.iEtape=810 OR fbMMA.iEtape=910;
fbCycleAuto();

//call Init mode and give over the needed parameters
fbCycleInit.xStart:=(fbMMA.iEtape=110 OR fbMMA.iEtape=340);
fbCycleInit.xStop:= NOT (fbMMA.iEtape=111 OR fbMMA.iEtape=341);
fbCycleAuto.xReset:= fbMMA.iEtape=810 OR fbMMA.iEtape=910;
fbCycleInit();
	
//call Manual mode and give over the needed parameters
fbCycleMan.xStart:= fbMMA.iEtape=210;
fbCycleMan.xStop:=  fbMMa.iEtape<>210;
fbCycleMan();

//call Motor Controller
fbMotor.Consigne:=stIO.stIn.lSetSpeedMotor;
fbMotor.fbConvertTachoToNumSpeed.IaEntree:=stio.stIn.lTachoValue;
fbMotor.xDirection:=stio.stIn.xMotorDirection;
fbMotor();
stio.stOut.lMotorOut:=fbMotor.fbConvertNumToMotorOut.QaSortie;

//call TCP Block
fbTCP();

//******************************************
//Output actions
//******************************************

//activate Lamp1
stIo.stOut.QxLampeRed:=fbCycleAuto.iEtape<800 AND fbCycleAuto.iEtape>0;

//actuator movement autorize only if not in ARU
fbAct1.xAutorizeIn:=fbBtn.xAru;
fbAct1.xAutorizeOut:=fbBtn.xAru;
fbAct2.xAutorizeIn:=fbBtn.xAru;
fbAct2.xAutorizeOut:=fbBtn.xAru;
fbAct3.xAutorizeIn:=fbBtn.xAru;
fbAct3.xAutorizeOut:=fbBtn.xAru;

//move in and out each actuator
fbAct1.xInGoOut:=fbCycleAuto.iEtape=130 OR fbCycleMan.iEtape=202;
fbAct2.xInGoOut:=fbCycleAuto.iEtape=160 OR fbCycleMan.iEtape=204;
fbAct3.xInGoOut:=fbCycleAuto.iEtape=140 OR fbCycleMan.iEtape=206;

fbAct3.xInGoIn:=fbCycleAuto.iEtape=180 OR fbCycleAuto.iEtape=800 OR fbCycleInit.iEtape=100 OR fbCycleMan.iEtape=205;
fbAct2.xInGoIn:=fbCycleAuto.iEtape=170 OR fbCycleAuto.iEtape=800 OR fbCycleInit.iEtape=100 OR fbCycleMan.iEtape=203;
fbAct1.xInGoIn:=fbCycleAuto.iEtape=180 OR fbCycleAuto.iEtape=800 OR fbCycleInit.iEtape=100 OR fbCycleMan.iEtape=201;

//Motor
IF(fbCycleAuto.iEtape=140 OR fbCycleMan.iEtape=207) THEN
	fbMotor.xOnOff:=TRUE;
END_IF
IF(fbCycleAuto.iEtape=170 OR fbCycleInit.iEtape=100 OR fbCycleMan.iEtape=208 OR fbCycleAuto.iEtape=800 OR fbMMA.iEtape=910 OR fbMMA.iEtape=810) THEN
	fbMotor.xOnOff:=FALSE;
END_IF
//Reset fbMotor
fbMotor.xReset:=fbMMA.iEtape=810;
//Motor Direction Output
stio.stOut.QxMotorDirection:=stio.stIn.xMotorDirection;

//Reset des Actionneurs avan le init
fbAct1.xReset:=fbCycleInit.iEtape=99 OR fbMMA.iEtape=810;
fbAct2.xReset:=fbCycleInit.iEtape=99 OR fbMMA.iEtape=810;
fbAct3.xReset:=fbCycleInit.iEtape=99 OR fbMMA.iEtape=810;

//Reset de la connexion TCIP
fbTCP.xForceDisconnect:=fbMMA.iEtape=810 OR fbCycleInit.iEtape=100;
IF fbCycleInit.iEtape=102 THEN
	fbTCP.xEnable:=TRUE;
END_IF



]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>